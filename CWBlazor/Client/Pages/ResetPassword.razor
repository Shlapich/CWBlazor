@page "/resetPassword"
@using CWBlazor.Shared.Models
@using CWBlazor.Shared.Contracts.Wrappers
@using CWBlazor.Client.Extencions
@using System.Web
@inject IAccountDataProvider DataProvider
@inject IJSRuntime JsRuntime
@inject NavigationManager Navigation

@if (showForm)
{
    <div id="resetPassword">
        <div class="container">
            <div id="resetPassword-row" class="row justify-content-center align-items-center">
                <div id="resetPassword-column" class="col-md-6">
                    <div id="resetPassword-box" class="col-md-12">
                        <EditForm Model="model" OnValidSubmit="OnValid" id="resetPassword-form" class="form">
                            <h3 class="text-center text-info">Resrt password</h3>
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            @if (isError)
                            {
                                <ErrorComponent Error="@error"></ErrorComponent>
                            }
                            <InputText @bind-Value="model.Email" hidden></InputText>
                            <InputText @bind-Value="model.Token" hidden></InputText>
                            <div class="form-group">
                                <InputText type="password" @bind-Value="model.Password" class="form-control" placeholder="Password"></InputText>
                            </div>
                            <div class="form-group">
                                <InputText type="password" @bind-Value="model.ConfirmPassword" class="form-control" placeholder="Confirm password"></InputText>
                            </div>
                            <div class="form-group">
                                <button class="btn btn-info btn-md w-100" disabled="@isDisabled">submit</button>
                            </div>
                            <div id="resetPassword-link" class="row">
                                <a href="login" class="nav-item text-info col-md-6">Login</a>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="text-danger">
        Wrong uri.
    </div>
}

@code {
    private ResetPasswordRequest model = new ResetPasswordRequest();
    private ErrorResponse error = null;
    bool isDisabled = false;
    bool isError = false;
    bool showForm = false;

    private async Task OnValid()
    {
        isDisabled = true;
        var msg = await DataProvider.ResetPassword(model);
        {
            if (msg.IsSuccess)
            {
                var result = msg.Value;
                await JsRuntime.SetUserInfoAsync(new UserInfo { Email = model.Email, Token = result.Token, RefreshToken = result.RefreshToken });
                Navigation.NavigateTo("/");
            }
            else
            {
                error = msg.Error;
                isError = true;
            }

            isDisabled = false;
        }
    }


    protected override void OnInitialized()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = uri.Query;
        Dictionary<string, string> parameters = HttpUtility.ParseQueryString(query).Keys.Cast<string>()
            .ToDictionary(k => k, v => HttpUtility.ParseQueryString(query)[v]);
        if (!parameters.TryGetValue("email", out var email) || !parameters.TryGetValue("token", out var token)) return;
        model.Email = email;
        model.Token = token;
        showForm = true;
    }
}